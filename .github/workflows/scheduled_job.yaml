name: scheduled job
run-name: "scheduled: ${{ inputs.DEB_DISTRO }}-${{ inputs.ARCH }}"

on:
  # make this workflow reusable (and only so)
  workflow_call:
    inputs:
      DEB_DISTRO:
        type: string
        description: The Debian/Ubuntu distribution codename to compile for
        required: true
      ARCH:
        type: string
        description: CPU architecture
        required: true

jobs:
  build:
    uses: ./.github/workflows/build.yaml
    with:
      DEB_DISTRO: ${{ inputs.DEB_DISTRO }}
      ROS_SOURCES: ros-one.repos
      ARCH: ${{ inputs.ARCH }}
      INSTALL_GPG_KEYS: |
        sudo curl -sSL https://ros.packages.techfak.net/gpg.key -o /etc/apt/keyrings/ros-one-keyring.gpg
        sudo mkdir -p /etc/ros/rosdep/sources.list.d
        echo "yaml https://ros.packages.techfak.net/ros-one.yaml ${{ inputs.DEB_DISTRO }}" | sudo tee /etc/ros/rosdep/sources.list.d/1-ros-one.list
      EXTRA_DEB_SOURCES: "deb [signed-by=/etc/apt/keyrings/ros-one-keyring.gpg] https://ros.packages.techfak.net ${{inputs.DEB_DISTRO}}-testing main"
      # proceed from existing debs artifact if run_attempt > 1
      DOWNLOAD_DEBS: ${{ github.run_attempt != '1' }}
      DEBS_ARTIFACT_NAME: ${{ inputs.DEB_DISTRO }}-debs
      SKIP_EXISTING: true
      SKIP_KNOWN_FAILING: true
      CONTINUE_ON_ERROR: true
      INSTALL_TO_CHROOT: false

  deploy:
    needs: build
    if: always() && vars.DEPLOY_URL
    timeout-minutes: 15
    runs-on: ubuntu-latest
    concurrency:
      # Ensure exclusive access to deployment target
      group: ${{ vars.DEPLOY_URL }}
      cancel-in-progress: false
    steps:
      - name: Import build artifacts to reprepro server
        uses: ./reprepro@main
        with:
          url: "${{ vars.DEPLOY_URL }}?distro=${{ inputs.DEB_DISTRO }}&run_id=${{ github.run_id }}&arch=${{ inputs.ARCH }}"
